{
  "swagger": "2.0",
  "info": {
    "title": "center.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "DeviceIotCenter"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/OtaUpgradeBase": {
      "post": {
        "summary": "ota基础升级\nroute: prefix=, internal_prefix=device, action=OtaUpgradeBase, version=v1",
        "operationId": "DeviceIotCenter_OtaUpgradeBase",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/iotOtaUpgradeBaseResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iotOtaUpgradeBaseReq"
            }
          }
        ],
        "tags": [
          "DeviceIotCenter"
        ]
      }
    },
    "/v1/PushRtcLive": {
      "post": {
        "summary": "摄像头Rtc推流\nroute: prefix=, internal_prefix=device, action=PushRtcLive, version=v1",
        "operationId": "DeviceIotCenter_PushRtcLive",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/iotPushRtcLiveResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iotPushRtcLiveReq"
            }
          }
        ],
        "tags": [
          "DeviceIotCenter"
        ]
      }
    },
    "/v1/PushRTMPLive": {
      "post": {
        "summary": "摄像头Rtpm推流\nroute: prefix=, internal_prefix=device, action=PushRTMPLive, version=v1",
        "operationId": "DeviceIotCenter_PushRTMPLive",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/iotPushRTMPLiveResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iotPushRTMPLiveReq"
            }
          }
        ],
        "tags": [
          "DeviceIotCenter"
        ]
      }
    },
    "/v1/SetIpcConfig": {
      "post": {
        "summary": "ipc配置下发\nroute: prefix=, internal_prefix=device, action=SetIpcConfig, version=v1",
        "operationId": "DeviceIotCenter_SetIpcConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/iotSetIpcConfigResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iotSetIpcConfigReq"
            }
          }
        ],
        "tags": [
          "DeviceIotCenter"
        ]
      }
    },
    "/v1/StartCameraPTZ": {
      "post": {
        "summary": "摄像头开始PTZ\nroute: prefix=, internal_prefix=device, action=StartCameraPTZ, version=v1",
        "operationId": "DeviceIotCenter_StartCameraPTZ",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/iotStartCameraPTZResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iotStartCameraPTZReq"
            }
          }
        ],
        "tags": [
          "DeviceIotCenter"
        ]
      }
    },
    "/v1/StartRtcAudio": {
      "post": {
        "summary": "摄像头启动Rtc音频\nroute: prefix=, internal_prefix=device, action=StartRtcAudio, version=v1",
        "operationId": "DeviceIotCenter_StartRtcAudio",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/iotStartRtcAudioResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iotStartRtcAudioReq"
            }
          }
        ],
        "tags": [
          "DeviceIotCenter"
        ]
      }
    },
    "/v1/StopCameraPTZ": {
      "post": {
        "summary": "摄像头停止PTZ\nroute: prefix=, internal_prefix=device, action=StopCameraPTZ, version=v1",
        "operationId": "DeviceIotCenter_StopCameraPTZ",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/iotStopCameraPTZResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iotStopCameraPTZReq"
            }
          }
        ],
        "tags": [
          "DeviceIotCenter"
        ]
      }
    },
    "/v1/StopRtcAudio": {
      "post": {
        "summary": "摄像头停止Rtc音频\nroute: prefix=, internal_prefix=device, action=StopRtcAudio, version=v1",
        "operationId": "DeviceIotCenter_StopRtcAudio",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/iotStopRtcAudioResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iotStopRtcAudioReq"
            }
          }
        ],
        "tags": [
          "DeviceIotCenter"
        ]
      }
    },
    "/v1/StopRtcLive": {
      "post": {
        "summary": "摄像头停止Rtc推流\nroute: prefix=, internal_prefix=device, action=StopRtcLive, version=v1",
        "operationId": "DeviceIotCenter_StopRtcLive",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/iotStopRtcLiveResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iotStopRtcLiveReq"
            }
          }
        ],
        "tags": [
          "DeviceIotCenter"
        ]
      }
    },
    "/v1/StopRTMPLive": {
      "post": {
        "summary": "摄像头停止Rtmp推流\nroute: prefix=, internal_prefix=device, action=StopRTMPLive, version=v1",
        "operationId": "DeviceIotCenter_StopRTMPLive",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/iotStopRTMPLiveResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/iotStopRTMPLiveReq"
            }
          }
        ],
        "tags": [
          "DeviceIotCenter"
        ]
      }
    }
  },
  "definitions": {
    "iotOtaUpgradeBaseReq": {
      "type": "object",
      "properties": {
        "device_id": {
          "type": "string",
          "title": "[必须]. Device id, 长度范围[1, 64]"
        },
        "cmd": {
          "type": "string",
          "title": "[必须]. 下发升级命令"
        }
      },
      "title": "ota基础升级请求"
    },
    "iotOtaUpgradeBaseResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/rpcStatus"
        }
      },
      "title": "ota基础升级返回"
    },
    "iotPushRtcLiveReq": {
      "type": "object",
      "properties": {
        "device_id": {
          "type": "string",
          "title": "[必填] Device id, 长度范围[1, 64]"
        },
        "ingress_id": {
          "type": "string",
          "title": "[可选] Ingress id, 设备只有一个ingress，且为webrtc类型时可不填"
        }
      },
      "title": "摄像头Rtc推流请求"
    },
    "iotPushRtcLiveResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/rpcStatus"
        }
      },
      "title": "摄像头Rtc推流返回"
    },
    "iotPushRTMPLiveReq": {
      "type": "object",
      "properties": {
        "device_id": {
          "type": "string",
          "title": "[必填] Device id, 长度范围[1, 64]"
        },
        "url": {
          "type": "string",
          "title": "[必填] 推流url"
        }
      },
      "title": "摄像头Rtpm推流请求"
    },
    "iotPushRTMPLiveResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/rpcStatus"
        }
      },
      "title": "摄像头Rtpm推流返回"
    },
    "iotSetIpcConfigReq": {
      "type": "object",
      "properties": {
        "device_id": {
          "type": "string",
          "title": "[必须]. Device id, 长度范围[1, 64]"
        },
        "config": {
          "type": "string",
          "title": "[必须]. 下发配置内容"
        }
      },
      "title": "ipc配置下发请求"
    },
    "iotSetIpcConfigResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/rpcStatus"
        }
      },
      "title": "ipc配置下发返回"
    },
    "iotStartCameraPTZReq": {
      "type": "object",
      "properties": {
        "device_id": {
          "type": "string",
          "title": "[必须]. Device id, 长度范围[1, 64]"
        },
        "id": {
          "type": "string",
          "title": "[可选]. 保留字段, 用于区分设备不同的ptz"
        },
        "PTZ": {
          "$ref": "#/definitions/ipcPTZ",
          "title": "[可选] PTZ请求内容"
        }
      },
      "title": "摄像头开始PTZ请求"
    },
    "iotStartCameraPTZResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/rpcStatus"
        }
      },
      "title": "摄像头开始PTZ返回"
    },
    "iotStartRtcAudioReq": {
      "type": "object",
      "properties": {
        "device_id": {
          "type": "string",
          "title": "[必填] Device id, 长度范围[1, 64]"
        },
        "url": {
          "type": "string",
          "title": "[必填] RTC信令服务地址"
        }
      },
      "title": "摄像头启动Rtc音频"
    },
    "iotStartRtcAudioResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/rpcStatus"
        }
      },
      "title": "摄像头Rtc推流返回"
    },
    "iotStopCameraPTZReq": {
      "type": "object",
      "properties": {
        "device_id": {
          "type": "string",
          "title": "[必须]. Device id, 长度范围[1, 64]"
        },
        "id": {
          "type": "string",
          "title": "[可选]. 保留字段, 用于区分设备不同的ptz"
        }
      },
      "title": "摄像头停止PTZ请求"
    },
    "iotStopCameraPTZResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/rpcStatus"
        }
      },
      "title": "摄像头停止PTZ返回"
    },
    "iotStopRtcAudioReq": {
      "type": "object",
      "properties": {
        "device_id": {
          "type": "string",
          "title": "[必填] Device id, 长度范围[1, 64]"
        }
      },
      "title": "摄像头停止Rtc推流请求"
    },
    "iotStopRtcAudioResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/rpcStatus"
        }
      },
      "title": "摄像头停止Rtc推流返回"
    },
    "iotStopRtcLiveReq": {
      "type": "object",
      "properties": {
        "device_id": {
          "type": "string",
          "title": "[必填] Device id, 长度范围[1, 64]"
        }
      },
      "title": "摄像头停止Rtc推流请求"
    },
    "iotStopRtcLiveResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/rpcStatus"
        }
      },
      "title": "摄像头停止Rtc推流返回"
    },
    "iotStopRTMPLiveReq": {
      "type": "object",
      "properties": {
        "device_id": {
          "type": "string",
          "title": "[必填] Device id, 长度范围[1, 64]"
        }
      },
      "title": "摄像头停止Rtpm推流请求"
    },
    "iotStopRTMPLiveResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/rpcStatus"
        }
      },
      "title": "摄像头停止Rtpm推流返回"
    },
    "ipcPTZ": {
      "type": "object",
      "properties": {
        "Pan": {
          "type": "integer",
          "format": "int32",
          "title": "Pan 水平转动角度 [-1,1]"
        },
        "Tilt": {
          "type": "integer",
          "format": "int32",
          "title": "Tilt 垂直转动角度[-1,1]"
        },
        "Zoom": {
          "type": "integer",
          "format": "int32",
          "title": "Zoom 缩放 [0,1]"
        }
      },
      "title": "*\n@brief PTZ"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          },
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors)."
    }
  }
}

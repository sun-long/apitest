{
  "swagger": "2.0",
  "info": {
    "title": "console-notification-service",
    "version": "v1.0.0"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/console-internal/v1/notification": {
      "post": {
        "summary": "发送系统消息\nroute: prefix=console-internal action=SendNotification version=v1",
        "operationId": "ConsoleNotificationInternalService_SendNotification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/notificationSendNotificationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/notificationSendNotificationRequest"
            }
          }
        ],
        "tags": [
          "ConsoleNotificationInternalService"
        ]
      }
    },
    "/console-internal/v1/notification/all_msg_type": {
      "get": {
        "summary": "拉取消息类型列表\nroute: prefix=console-internal action=GetAllMsgType version=v1",
        "operationId": "ConsoleNotificationInternalService_GetAllMsgType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/notificationGetAllMsgTypeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "page_request.offset",
            "description": "可选, 开始位置, 取值:\u003e=0, 0为第一条; 默认值为0.\n返回本次请求返回的第一条记录实际位置(一般与输入一致).",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_request.limit",
            "description": "长度, 取值范围[1,100], 如果超出范围, 则返回失败;\n在某些接口中limit范围可能会重新定义, 请以其接口的补充说明为准.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_request.total",
            "description": "可选, 总数, 请求无须填此参数, 响应时填写.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "ConsoleNotificationInternalService"
        ]
      }
    },
    "/console-internal/v1/notification/all_template": {
      "get": {
        "summary": "拉取消息模板列表\nroute: prefix=console-internal action=GetAllTemplate version=v1",
        "operationId": "ConsoleNotificationInternalService_GetAllTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/notificationGetAllTemplateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "page_request.offset",
            "description": "可选, 开始位置, 取值:\u003e=0, 0为第一条; 默认值为0.\n返回本次请求返回的第一条记录实际位置(一般与输入一致).",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_request.limit",
            "description": "长度, 取值范围[1,100], 如果超出范围, 则返回失败;\n在某些接口中limit范围可能会重新定义, 请以其接口的补充说明为准.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_request.total",
            "description": "可选, 总数, 请求无须填此参数, 响应时填写.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "ConsoleNotificationInternalService"
        ]
      }
    },
    "/console-internal/v1/notification/delete_msg_type": {
      "post": {
        "summary": "删除消息类型\nroute: prefix=console-internal action=DeleteMsgType version=v1",
        "operationId": "ConsoleNotificationInternalService_DeleteMsgType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/notificationDeleteMsgTypeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/notificationDeleteMsgTypeRequest"
            }
          }
        ],
        "tags": [
          "ConsoleNotificationInternalService"
        ]
      }
    },
    "/console-internal/v1/notification/delete_template": {
      "post": {
        "summary": "删除消息模板\nroute: prefix=console-internal action=DeleteTemplate version=v1",
        "operationId": "ConsoleNotificationInternalService_DeleteTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/notificationDeleteTemplateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/notificationDeleteTemplateRequest"
            }
          }
        ],
        "tags": [
          "ConsoleNotificationInternalService"
        ]
      }
    },
    "/console-internal/v1/notification/msg_type": {
      "get": {
        "summary": "获取消息类型详情\nroute: prefix=console-internal action=GetMsgType version=v1",
        "operationId": "ConsoleNotificationInternalService_GetMsgType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/notificationGetMsgTypeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "msg_type_id",
            "description": "消息类型ID.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ConsoleNotificationInternalService"
        ]
      },
      "post": {
        "summary": "添加消息类型\nroute: prefix=console-internal action=CreateMsgType version=v1",
        "operationId": "ConsoleNotificationInternalService_CreateMsgType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/notificationCreateMsgTypeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/notificationCreateMsgTypeRequest"
            }
          }
        ],
        "tags": [
          "ConsoleNotificationInternalService"
        ]
      }
    },
    "/console-internal/v1/notification/template": {
      "get": {
        "summary": "获取消息模板详情\nroute: prefix=console-internal action=GetTemplate version=v1",
        "operationId": "ConsoleNotificationInternalService_GetTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/notificationGetTemplateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "template_id",
            "description": "消息模板ID.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ConsoleNotificationInternalService"
        ]
      },
      "post": {
        "summary": "创建消息模板\nroute: prefix=console-internal action=CreateTemplate version=v1",
        "operationId": "ConsoleNotificationInternalService_CreateTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/notificationCreateTemplateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/notificationCreateTemplateRequest"
            }
          }
        ],
        "tags": [
          "ConsoleNotificationInternalService"
        ]
      }
    },
    "/console-internal/v1/notification/update_msg_type": {
      "post": {
        "summary": "修改消息类型\nroute: prefix=console-internal action=UpdateMsgType version=v1",
        "operationId": "ConsoleNotificationInternalService_UpdateMsgType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/notificationUpdateMsgTypeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/notificationUpdateMsgTypeRequest"
            }
          }
        ],
        "tags": [
          "ConsoleNotificationInternalService"
        ]
      }
    },
    "/console-internal/v1/notification/update_template": {
      "post": {
        "summary": "修改消息模板\nroute: prefix=console-internal action=UpdateTemplate version=v1",
        "operationId": "ConsoleNotificationInternalService_UpdateTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/notificationUpdateTemplateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/notificationUpdateTemplateRequest"
            }
          }
        ],
        "tags": [
          "ConsoleNotificationInternalService"
        ]
      }
    }
  },
  "definitions": {
    "notificationCreateMsgTypeRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "类型名称"
        },
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "可选，可以指定id，若未指定，则随机生成"
        }
      }
    },
    "notificationCreateMsgTypeResponse": {
      "type": "object",
      "properties": {
        "msg_type_info": {
          "$ref": "#/definitions/notificationMsgTypeInfo",
          "title": "消息类型数据"
        }
      }
    },
    "notificationCreateTemplateRequest": {
      "type": "object",
      "properties": {
        "msg_type_id": {
          "type": "string",
          "format": "uint64",
          "title": "消息类型"
        },
        "name": {
          "type": "string",
          "title": "消息标题"
        },
        "content": {
          "type": "string",
          "title": "消息内容"
        },
        "sender": {
          "type": "string",
          "format": "uint64",
          "title": "消息来源"
        },
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "可选，可以指定id，若未指定，则随机生成"
        }
      }
    },
    "notificationCreateTemplateResponse": {
      "type": "object",
      "properties": {
        "template_info": {
          "$ref": "#/definitions/notificationMsgTemplateInfo",
          "title": "消息模板数据"
        }
      }
    },
    "notificationDeleteMsgTypeRequest": {
      "type": "object",
      "properties": {
        "msg_type_id": {
          "type": "string",
          "format": "uint64",
          "title": "消息类型"
        }
      }
    },
    "notificationDeleteMsgTypeResponse": {
      "type": "object"
    },
    "notificationDeleteTemplateRequest": {
      "type": "object",
      "properties": {
        "template_id": {
          "type": "string",
          "format": "uint64",
          "title": "消息模板ID"
        }
      }
    },
    "notificationDeleteTemplateResponse": {
      "type": "object"
    },
    "notificationGetAllMsgTypeResponse": {
      "type": "object",
      "properties": {
        "all_msg_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/notificationMsgTypeInfo"
          },
          "title": "所有消息类型数据"
        },
        "page_response": {
          "$ref": "#/definitions/notificationPageInfo",
          "title": "list返回对应的翻页：offset, total"
        }
      }
    },
    "notificationGetAllTemplateResponse": {
      "type": "object",
      "properties": {
        "all_templates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/notificationMsgTemplateInfo"
          },
          "title": "所有消息模板数据"
        },
        "page_response": {
          "$ref": "#/definitions/notificationPageInfo",
          "title": "list返回对应的翻页：offset, total"
        }
      }
    },
    "notificationGetMsgTypeResponse": {
      "type": "object",
      "properties": {
        "msg_type_info": {
          "$ref": "#/definitions/notificationMsgTypeInfo",
          "title": "消息类型数据"
        }
      }
    },
    "notificationGetTemplateResponse": {
      "type": "object",
      "properties": {
        "template_info": {
          "$ref": "#/definitions/notificationMsgTemplateInfo",
          "title": "消息模板数据"
        }
      }
    },
    "notificationMsgTemplateInfo": {
      "type": "object",
      "properties": {
        "template_id": {
          "type": "string",
          "format": "uint64",
          "title": "消息模板ID"
        },
        "msg_type": {
          "$ref": "#/definitions/notificationMsgTypeInfo",
          "title": "消息类型"
        },
        "name": {
          "type": "string",
          "title": "消息标题"
        },
        "content": {
          "type": "string",
          "title": "消息接收时间"
        },
        "sender": {
          "type": "string",
          "format": "uint64",
          "title": "消息来源"
        },
        "create_at": {
          "type": "string",
          "format": "date-time",
          "title": "模板创建时间"
        }
      }
    },
    "notificationMsgTypeInfo": {
      "type": "object",
      "properties": {
        "msg_type_id": {
          "type": "string",
          "format": "uint64",
          "title": "消息类型"
        },
        "name": {
          "type": "string",
          "title": "类型名称"
        }
      }
    },
    "notificationPageInfo": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "可选, 开始位置, 取值:\u003e=0, 0为第一条; 默认值为0.\n返回本次请求返回的第一条记录实际位置(一般与输入一致)."
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "长度, 取值范围[1,100], 如果超出范围, 则返回失败;\n在某些接口中limit范围可能会重新定义, 请以其接口的补充说明为准."
        },
        "total": {
          "type": "string",
          "format": "int64",
          "description": "可选, 总数, 请求无须填此参数, 响应时填写."
        }
      }
    },
    "notificationSendNotificationRequest": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "format": "uint64",
          "title": "接受者ID，如果为0则是发送给全体"
        },
        "template_id": {
          "type": "string",
          "format": "uint64",
          "title": "消息模板ID"
        },
        "content": {
          "type": "string",
          "title": "消息内容\ntemplate表中的content为固定格式，实际发送消息时只需要填上特定参数即可生成新消息。\n比如模板content为：您订阅的{0}服务将于{1}天后到期。\n那么msg中的content填上：智能冰箱,7。\n则最后发给客户端的消息显示为：您订阅的智能冰箱服务将于7天后到期。"
        }
      }
    },
    "notificationSendNotificationResponse": {
      "type": "object"
    },
    "notificationUpdateMsgTypeRequest": {
      "type": "object",
      "properties": {
        "msg_type_id": {
          "type": "string",
          "format": "uint64",
          "title": "消息类型"
        },
        "name": {
          "type": "string",
          "title": "类型名称"
        }
      }
    },
    "notificationUpdateMsgTypeResponse": {
      "type": "object",
      "properties": {
        "msg_type_info": {
          "$ref": "#/definitions/notificationMsgTypeInfo",
          "title": "消息类型数据"
        }
      }
    },
    "notificationUpdateTemplateRequest": {
      "type": "object",
      "properties": {
        "template_id": {
          "type": "string",
          "format": "uint64",
          "title": "消息模板ID"
        },
        "msg_type_id": {
          "type": "string",
          "format": "uint64",
          "title": "消息类型ID"
        },
        "name": {
          "type": "string",
          "title": "消息标题"
        },
        "content": {
          "type": "string",
          "title": "消息接收时间"
        },
        "sender": {
          "type": "string",
          "format": "uint64",
          "title": "消息来源，默认为0"
        }
      }
    },
    "notificationUpdateTemplateResponse": {
      "type": "object",
      "properties": {
        "template_info": {
          "$ref": "#/definitions/notificationMsgTemplateInfo",
          "title": "消息模板数据"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\nExample 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\nExample 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
